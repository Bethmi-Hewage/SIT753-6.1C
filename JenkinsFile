pipeline{
    agent any

    // defining envrionment variables
    environment {
        DIRECTORY_PATH = "C:/Users/Bethmi Hewage/Desktop/Deakin/T2-2024/SIT753/5.1P"
        TESTING_ENVIRONMENT = "Test Environment 1"
        PRODUCTION_ENVIRONMENT = "Bethmi's Production Environment"
        EMAIL_RECIPIENT = "bethmi.k98@gmail.com"
    }

    stages{
        stage('Build'){
            steps{
                echo "Fetching the source code from ${env.DIRECTORY_PATH}"
                echo "Compile and package the code."
                echo "Tool: Maven"
            }
            post{
                success {
                    script{
                        sh 'echo "Build log" > build.log'  // save the build log to a file
                        archiveArtifacts artifacts: 'build.log', fingerprint: true
                    }
                    emailext(
                        to: "${env.EMAIL_RECIPIENT}",
                        subject: "Build Status",
                        body: "Build was successful",
                        attachmentsPattern: "88/build.log",
                        mimeType: 'text/plan'
                    )
                }
                failure{
                    script{
                        sh 'echo "Build log" > build.log'  // save the build log to a file
                        archiveArtifacts artifacts: 'build.log', fingerprint: true
                    }
                    emailext(
                        to: "${env.EMAIL_RECIPIENT}",
                        subject: "Build Status",
                        body: "Build was a failure",
                        attachmentsPattern: "88/build.log",
                        mimeType: 'text/plan'
                    )
                }
            }
        }
        stage('Unit and Integration Tests'){
            steps{
                echo "Run unit and integration tests to ensure code functionality."
                echo "Tool: JUnit, Maven"
            }
        }
        stage('Code Analysis'){
            steps{
                echo "Analyze code to ensure it meets industry standards."
                echo "Tool: SonarQube"
            }
        }
        stage('Security Scan'){
            steps{
                echo "Perform a security scan to identify vulnerabilities"
                echo "Tool: OWASP Dependency Check"
            }
        }
        stage('Deploy to Staging'){
            steps{
                echo "Deploy the application to a staging server"
                echo "Tool: AWS"
            }
        }
        stage('Integration Tests on Staging'){
            steps{
                echo "Run integration tests in the staging enviornment"
                echo "Tool: Selenium, Postman"
            }
        }
        stage('Deploy to Production'){
            steps{
                echo "Deploy the application to ${env.PRODUCTION_ENVIRONMENT}"
                echo "Tool: Selenium, Postman"
            }
        }
    }
}